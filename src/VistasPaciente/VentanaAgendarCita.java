
package VistasPaciente;

import Controladores.ControladorAgendarCitaPacientes;
import Excepciones.CitaRegistradaException;
import Modelos.Consulta;
import Modelos.DiaCitaSeparada;
import Modelos.Horario;
import Modelos.Medico;
import Modelos.Paciente;
import Excepciones.DiaDescansoException;
import java.awt.Color;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.Date;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author diazje
 */
public class VentanaAgendarCita extends javax.swing.JFrame {
    
    int xMouse, yMouse;
    private Paciente paciente;
    private ControladorAgendarCitaPacientes controladorAgendarCitas;
    DefaultTableModel modelo;


    /**
     * Creates new form VentanaAgendarCita
     */
    public VentanaAgendarCita(Paciente paciente) {
        initComponents();
        this.paciente = paciente;
        this.controladorAgendarCitas = new ControladorAgendarCitaPacientes();
        modelo = (DefaultTableModel) tablaMedicos.getModel();
        filtroFechas.setMinSelectableDate(new Date());
        actualizarEspecialidades();
        bloquear();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        barraLateral2 = new javax.swing.JPanel();
        exitBtn2 = new javax.swing.JPanel();
        lblCerrar2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cboEspecialidades = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaMedicos = new javax.swing.JTable();
        txtCedula = new javax.swing.JTextField();
        btnVolver = new javax.swing.JPanel();
        lblRegresar = new javax.swing.JPanel();
        lblVolver = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnBuscarFecha = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cboHorariosDispo = new javax.swing.JComboBox<>();
        txtMotivo = new javax.swing.JTextField();
        lblHorario = new javax.swing.JLabel();
        btnAgendar = new javax.swing.JButton();
        filtroFechas = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        lblHorario1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        barraLateral2.setBackground(new java.awt.Color(103, 160, 174));
        barraLateral2.setForeground(new java.awt.Color(255, 255, 255));
        barraLateral2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                barraLateral2MouseDragged(evt);
            }
        });
        barraLateral2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                barraLateral2MousePressed(evt);
            }
        });

        exitBtn2.setBackground(new java.awt.Color(103, 160, 174));

        lblCerrar2.setFont(new java.awt.Font("Segoe UI", 1, 23)); // NOI18N
        lblCerrar2.setForeground(new java.awt.Color(0, 0, 0));
        lblCerrar2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCerrar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8-cerrar-ventana-40.png"))); // NOI18N
        lblCerrar2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblCerrar2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCerrar2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblCerrar2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblCerrar2MouseExited(evt);
            }
        });

        javax.swing.GroupLayout exitBtn2Layout = new javax.swing.GroupLayout(exitBtn2);
        exitBtn2.setLayout(exitBtn2Layout);
        exitBtn2Layout.setHorizontalGroup(
            exitBtn2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, exitBtn2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblCerrar2))
        );
        exitBtn2Layout.setVerticalGroup(
            exitBtn2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, exitBtn2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblCerrar2))
        );

        javax.swing.GroupLayout barraLateral2Layout = new javax.swing.GroupLayout(barraLateral2);
        barraLateral2.setLayout(barraLateral2Layout);
        barraLateral2Layout.setHorizontalGroup(
            barraLateral2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, barraLateral2Layout.createSequentialGroup()
                .addGap(0, 551, Short.MAX_VALUE)
                .addComponent(exitBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        barraLateral2Layout.setVerticalGroup(
            barraLateral2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, barraLateral2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(exitBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.add(barraLateral2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(103, 160, 174));
        jLabel1.setText("Especializacion");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, -1, -1));

        cboEspecialidades.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        cboEspecialidades.setSelectedIndex(-1);
        cboEspecialidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboEspecialidadesActionPerformed(evt);
            }
        });
        jPanel1.add(cboEspecialidades, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 220, 150, -1));

        tablaMedicos.setBackground(new java.awt.Color(255, 255, 255));
        tablaMedicos.setForeground(new java.awt.Color(103, 160, 174));
        tablaMedicos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identificacion", "Nombre de medicos disponibles"
            }
        ));
        tablaMedicos.setSelectionBackground(new java.awt.Color(103, 160, 174));
        tablaMedicos.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tablaMedicos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMedicosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaMedicos);
        if (tablaMedicos.getColumnModel().getColumnCount() > 0) {
            tablaMedicos.getColumnModel().getColumn(0).setResizable(false);
            tablaMedicos.getColumnModel().getColumn(1).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 490, 158));

        txtCedula.setEditable(false);
        txtCedula.setBackground(new java.awt.Color(255, 255, 255));
        txtCedula.setForeground(new java.awt.Color(255, 255, 255));
        txtCedula.setBorder(null);
        jPanel1.add(txtCedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 460, 106, -1));

        btnVolver.setBackground(new java.awt.Color(103, 160, 174));

        lblRegresar.setBackground(new java.awt.Color(103, 160, 174));

        lblVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Regresar.png"))); // NOI18N
        lblVolver.setText("jLabel1");
        lblVolver.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblVolver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblVolverMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblVolverMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblVolverMouseExited(evt);
            }
        });

        javax.swing.GroupLayout lblRegresarLayout = new javax.swing.GroupLayout(lblRegresar);
        lblRegresar.setLayout(lblRegresarLayout);
        lblRegresarLayout.setHorizontalGroup(
            lblRegresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lblRegresarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        lblRegresarLayout.setVerticalGroup(
            lblRegresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lblRegresarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblVolver))
        );

        javax.swing.GroupLayout btnVolverLayout = new javax.swing.GroupLayout(btnVolver);
        btnVolver.setLayout(btnVolverLayout);
        btnVolverLayout.setHorizontalGroup(
            btnVolverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnVolverLayout.createSequentialGroup()
                .addComponent(lblRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(550, Short.MAX_VALUE))
        );
        btnVolverLayout.setVerticalGroup(
            btnVolverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnVolverLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.add(btnVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 790, 590, -1));

        jLabel4.setFont(new java.awt.Font("Roboto", 1, 29)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(103, 160, 174));
        jLabel4.setText("Agenda tu cita");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 150, -1, -1));

        jLabel5.setFont(new java.awt.Font("Roboto", 1, 17)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(103, 160, 174));
        jLabel5.setText("Seleccione la fecha:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 490, -1, -1));

        btnBuscarFecha.setBackground(new java.awt.Color(103, 160, 174));
        btnBuscarFecha.setFont(new java.awt.Font("Roboto", 1, 15)); // NOI18N
        btnBuscarFecha.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscarFecha.setText("Buscar");
        btnBuscarFecha.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnBuscarFecha.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscarFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarFechaActionPerformed(evt);
            }
        });
        jPanel1.add(btnBuscarFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 490, 95, 29));

        jLabel6.setFont(new java.awt.Font("Roboto", 1, 17)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(103, 160, 174));
        jLabel6.setText("Motivo de la consulta");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 660, -1, -1));

        jPanel1.add(cboHorariosDispo, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 560, 133, 40));

        txtMotivo.setForeground(new java.awt.Color(0, 0, 0));
        txtMotivo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(txtMotivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 620, 318, 100));

        lblHorario.setFont(new java.awt.Font("Roboto", 0, 17)); // NOI18N
        lblHorario.setForeground(new java.awt.Color(103, 160, 174));
        lblHorario.setText("Seleccione un médico");
        jPanel1.add(lblHorario, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 270, -1, -1));

        btnAgendar.setBackground(new java.awt.Color(103, 160, 174));
        btnAgendar.setFont(new java.awt.Font("Roboto", 1, 15)); // NOI18N
        btnAgendar.setForeground(new java.awt.Color(255, 255, 255));
        btnAgendar.setText("Agendar");
        btnAgendar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnAgendar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgendarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgendar, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 740, 108, 37));
        jPanel1.add(filtroFechas, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 490, 161, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/logo280_1.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 250, 70));

        lblHorario1.setFont(new java.awt.Font("Roboto", 1, 17)); // NOI18N
        lblHorario1.setForeground(new java.awt.Color(103, 160, 174));
        lblHorario1.setText("Horarios disponibles:");
        jPanel1.add(lblHorario1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 570, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 591, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 831, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lblCerrar2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCerrar2MouseClicked
        System.exit(0);
    }//GEN-LAST:event_lblCerrar2MouseClicked

    private void lblCerrar2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCerrar2MouseEntered
        exitBtn2.setBackground(Color.red);
        lblCerrar2.setForeground(Color.white);
    }//GEN-LAST:event_lblCerrar2MouseEntered

    private void lblCerrar2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCerrar2MouseExited
        exitBtn2.setBackground(new Color(103, 160,174));
        lblCerrar2.setForeground(Color.black);
    }//GEN-LAST:event_lblCerrar2MouseExited

    private void barraLateral2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barraLateral2MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_barraLateral2MouseDragged

    private void barraLateral2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barraLateral2MousePressed
        xMouse = evt.getX();
        yMouse= evt.getY();
    }//GEN-LAST:event_barraLateral2MousePressed

    private void cboEspecialidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboEspecialidadesActionPerformed
        String especialidad = (String) cboEspecialidades.getSelectedItem();
        actualizarTablaMedicos(especialidad);
    }//GEN-LAST:event_cboEspecialidadesActionPerformed

    private void lblVolverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblVolverMouseClicked
        this.dispose();
        JFrame v2 = new VentanaMenuPa(paciente);
        v2.setVisible(true);
    }//GEN-LAST:event_lblVolverMouseClicked

    private void lblVolverMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblVolverMouseEntered
        lblRegresar.setBackground(Color.red);
        lblVolver.setForeground(Color.white);
    }//GEN-LAST:event_lblVolverMouseEntered

    private void lblVolverMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblVolverMouseExited
        lblRegresar.setBackground(new Color(103, 160,174));
        lblVolver.setForeground(Color.black);
    }//GEN-LAST:event_lblVolverMouseExited

    private void tablaMedicosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMedicosMouseClicked
        int row = tablaMedicos.getSelectedRow();
        String identificacion = modelo.getValueAt(row,0).toString();
        txtCedula.setText(identificacion);
    }//GEN-LAST:event_tablaMedicosMouseClicked

    private void btnBuscarFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarFechaActionPerformed
        if(txtCedula.getText().isEmpty()){
            JOptionPane.showMessageDialog( null , "Seleccione un medico para buscar los horarios disponibles");
            return;  
        }
        
        Date x = filtroFechas.getDate();
        LocalDate dia = new  java.sql.Date(x.getTime()).toLocalDate();
        LocalTime horaActual = LocalTime.now();
        LocalDate hoy = LocalDate.now();
        
        if(filtroFechas.getDate() == null){
            JOptionPane.showMessageDialog( null , "Debe escoger una fecha para la cita");
        }else{  
            String identificacion = txtCedula.getText();   
            Medico medico = (Medico)controladorAgendarCitas.buscarMedicoIdentificacion(identificacion);
            cboHorariosDispo.removeAllItems();
            mostrarBloques(dia, medico.getIdentificacion(), horaActual);    
        }
    }//GEN-LAST:event_btnBuscarFechaActionPerformed

    private void btnAgendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgendarActionPerformed
        if(txtMotivo.getText().isEmpty()){
            JOptionPane.showMessageDialog( null , "Existen campos obligatorios por llenar");
            return;
        }
        
        if(filtroFechas.getDate() == null){
            JOptionPane.showMessageDialog( null , "Debe escoger una fecha para la cita");
        }else{
            String identificacion = txtCedula.getText();
            Medico medico = (Medico)controladorAgendarCitas.buscarMedicoIdentificacion(identificacion);
            Date x = filtroFechas.getDate();
            String hora1 = cboHorariosDispo.getSelectedItem().toString();
            LocalTime horaActual =  LocalTime.parse(hora1);
            LocalDate fecha = new  java.sql.Date(x.getTime()).toLocalDate();
            String motivo = txtMotivo.getText();
            String codigo =  controladorAgendarCitas.generarCodigo();
            Consulta consulta = new Consulta(medico, paciente, horaActual, fecha, "Agendada", codigo, "Cita", motivo, "", "", "");
            try{
                controladorAgendarCitas.agendarCita(consulta, paciente, medico, horaActual);
                JOptionPane.showMessageDialog( null , "La Cita ha sido registrada");
                limpiarCampos();
                bloquear();
            }catch( NullPointerException ex){
            }
        }
    }//GEN-LAST:event_btnAgendarActionPerformed

    public void actualizarEspecialidades(){
        cboEspecialidades.removeAllItems();
        ArrayList<String> especialidades = controladorAgendarCitas.getEspecialidades();
        for (int i = 0; i < especialidades.size(); i++) {
            if(especialidades.get(i) != null){
                if(!especialidades.get(i).equals("Añadir Especialidad Nueva") && !especialidades.get(i).equals("-Elegir-")){
                    cboEspecialidades.addItem(especialidades.get(i));
                }
            }
        }
        cboEspecialidades.setSelectedIndex(-1);
    }
                   
    public void bloquear(){
        
        ArrayList<Consulta> contador = controladorAgendarCitas.validarMaximoCitas(paciente);             
        
        if(contador.size() >= 3) {
            btnAgendar.setEnabled(false);
            btnBuscarFecha.setEnabled(false);
            cboHorariosDispo.setEditable(false);
            cboEspecialidades.setEditable(false);
            JOptionPane.showMessageDialog(null, "Ha cumplido el máximo de 3 citas activas");
        }   
    }
    
    private void mostrarBloques(LocalDate dia , String identificacion, LocalTime horaActual){
        LocalDate hoy = LocalDate.now();
        try{
            cboHorariosDispo.removeAllItems();
            DiaCitaSeparada diaCita = controladorAgendarCitas.ObtenerCitasDia(dia, identificacion);
            if(diaCita.getDia().isEqual(hoy)){
                ArrayList<Horario> horarios = diaCita.getHorarioCitas();
                for (int i = 0; i < horarios.size(); i++) {
                    if(horarios.get(i).isEsDisponible() == true ){
                        if(horarios.get(i).getHora().isAfter(horaActual)){
                            cboHorariosDispo.addItem(horarios.get(i).getHora().toString());   
                        }
                    }
                }
            }else if(diaCita.getDia().isAfter(hoy)){
                ArrayList<Horario> horarios = diaCita.getHorarioCitas();
                for (int i = 0; i < horarios.size(); i++) {
                    if(horarios.get(i).isEsDisponible() == true ){
                        cboHorariosDispo.addItem(horarios.get(i).getHora().toString());
                    }
                }
            }
        }catch(DiaDescansoException ex){
            JOptionPane.showMessageDialog(null, ex.getMessage());
            filtroFechas.setDate(null);     
        }  
    }
     
    public void actualizarTablaMedicos(String especialidad){    
        ArrayList<Medico> medicos = controladorAgendarCitas.obtenerMedicos(especialidad);
        try{
            for (int i = 0; i < 3 ; i++) {
                for (int j = 0; j < modelo.getRowCount(); j++) {
                    modelo.removeRow(j);
                }
            }
        }catch(NullPointerException e){
        }
            try{
                for (int i = 0; i < medicos.size() ; i++) {
                    if(!medicos.get(i).getIdentificacion().equals(paciente.getIdentificacion())){
                      Medico aux = medicos.get(i);
                      Object[] ob = {aux.getIdentificacion(), aux.getNombres()+" " + aux.getApellidos()};
                      modelo.addRow(ob);  
                    }
                    }
            }catch(NullPointerException e){        
        } 
    }
    
    public void limpiarCampos(){
        cboEspecialidades.setSelectedIndex(-1);
        txtCedula.setText(null);
        filtroFechas.setDate(null);
        cboHorariosDispo.setSelectedIndex(-1); 
        txtMotivo.setText(null);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaAgendarCita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaAgendarCita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaAgendarCita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaAgendarCita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel barraLateral2;
    private javax.swing.JButton btnAgendar;
    private javax.swing.JButton btnBuscarFecha;
    private javax.swing.JPanel btnVolver;
    private javax.swing.JComboBox<String> cboEspecialidades;
    private javax.swing.JComboBox<String> cboHorariosDispo;
    private javax.swing.JPanel exitBtn2;
    private com.toedter.calendar.JDateChooser filtroFechas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCerrar2;
    private javax.swing.JLabel lblHorario;
    private javax.swing.JLabel lblHorario1;
    private javax.swing.JPanel lblRegresar;
    private javax.swing.JLabel lblVolver;
    private javax.swing.JTable tablaMedicos;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtMotivo;
    // End of variables declaration//GEN-END:variables
}
